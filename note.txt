//automobile
#include<stdio.h>

int main() {
    int V, W;
    scanf("%d", &V);
    scanf("%d", &W);
    
    if (W % 2 != 0 || V >= W) {
        printf("INVALID INPUT\n");
    } else {
        int TW, FW;
        FW = (W - (2 * V)) / 2;
        TW = V - FW;
        printf("TW=%d FW=%d\n", TW, FW);
    }
    
    return 0;
}

//fibonacci
#include<stdio.h>	
#include<stdlib.h> 
int main(){ 
   int a=0,b=1,i,c,n,j;	
system("cls"); 
	printf("Enter the limit:");	
	scanf("%d",&n);	
	for(i=1;i<=n;i++)	
	{	
    	a=0;   
    	b=1;   
    	printf("%d\t",b);	
    	for(j=1;j<i;j++)	
    	{   
        	c=a+b;	
        	printf("%d\t",c);	
        	a=b;	
        	b=c;	
	
    	}   
    	printf("\n");	
	}	
return 0; 
}

//complex numbers
#include <stdio.h>
typedef struct complexNumber {
        	int real;
        	int img;
} complex;
complex add(complex x, complex y);
int main()
{
        	complex a, b, sum;
        	a.real = 2;
        	a.img = 3;
        	b.real = 4;
        	b.img = 5;
        	printf("\n a = %d + %di", a.real, a.img);
        	printf("\n b = %d + %di", b.real, b.img);
        	sum = add(a, b);
        	printf("\n sum = %d + %di", sum.real, sum.img);
        	return 0;
}
complex add(complex x, complex y)
{
        	complex add;
        	add.real = x.real + y.real;
        	add.img = x.img + y.img;
        	return (add);
}


//matrix compare
#include <stdio.h>
#include <conio.h>
main(){
   int A[10][10], B[10][10];
   int i, j, R1, C1, R2, C2, flag =1;
   printf("Enter the order of the matrix A");
   scanf("%d%d", &R1, &C1);
   printf("Enter the order of the matrix B");
   scanf("%d%d", &R2,&C2);
   printf("Enter the elements of matrix A");
   for(i=0; i<R1; i++){
  	for(j=0; j<C1; j++){
     	scanf("%d",&A[i][j]);
  	}
   }
   printf("Enter the elements of matrix B");
   for(i=0; i<R2; i++){
  	for(j=0; j<C2; j++){
     	scanf("%d",&B[i][j]);
}
   }
   printf("MATRIX A is ");
   for(i=0; i<R1; i++){
  	for(j=0; j<C1; j++){
     	printf("%3d",A[i][j]);
  	}
  	printf(" ");
   }
   printf("MATRIX B is ");
   for(i=0; i<R2; i++){
  	for(j=0; j<C2; j++){
     	printf("%3d",B[i][j]);
  	}
  	printf(" ");
   }
   /* Comparing two matrices for equality */
   if(R1 == R2 && C1 == C2){
  	printf("Matrices can be compared");
  	for(i=0; i<R1; i++){
     	for(j=0; j<C2; j++){
        	if(A[i][j] != B[i][j]){
           	flag = 0;
           	break;
}
     	}
  	}
   }
   else{
  	printf(" Cannot be compared");
  	exit(1);
   }
   if(flag == 1 )
  	printf("Two matrices are equal");
   else
   printf("But,two matrices are not equal");
}

//12to24hr
#include <stdio.h>
 
int main() {
	int h, m, am_pm, h1, m1;
	printf("Enter the time in 12-hour format (hh:mm am/pm): ");
	scanf("%d:%d %c", & h, & m, & am_pm);
	m1 = m;
	h1 = h;
	if (am_pm == 'a' || am_pm == 'A') { // if it is am / AM
    	// if hour = 12, then it is 0 in 24 hour format
    	if (h1 == 12) {
        	h1 = 0;
    	}
    	printf("%02d:%02d a.m is same as %02d:%02d in 24-hour format\n", h, m, h1, m1);
	} else if (am_pm == 'p' || am_pm == 'P') { // if it is pm / PM
    	if (h1 != 12) {
        	h1 += 12;
    	}
    	printf("%02d:%02d p.m is same as %02d:%02d in 24-hour format\n", h, m, h1, m1);
	}
	return 0;
}

//monkey
#include <stdio.h>
int main ()
{
	int n, k, j, m, p;
	float atebanana = 0.0, atepeanut = 0.0;
	scanf ("%d %d %d %d %d", &n, &k, &j, &m, &p);
	if (n < 0 || k < 0 || j < 0 || m < 0 || p < 0)
	{
    	printf ("INVALID INPUT");
	}
	else
	{
    	if (k > 0)
    	{
        	atebanana = (float) (m / k);
        	    	m = m % k;
        	}
        if (j > 0)
        	{
        	atepeanut = (float) (p / j);
        	    	p = p % j;
        	}
    	n = n - atebanana - atepeanut;
    	if ((m != 0) || (p != 0))
        	    n = n - 1;
    	printf ("Number of Monkeys left on the Tree:%d", n);
	}
	return 0;
}

//pointers
#include <stdio.h>
#include <math.h>
int main()
{
int i,n;
float a[10], mean, sd, sum, var;
float*p;
printf("\nEnter number of elements:");
scanf("%d",&n);
printf("\nEnter the elements-\n");
p=a;
for(i=0;i<n;i++)
{
scanf("%f",p);
p++;
}
p=a;
printf("\nInput Elements are:\n");
for(i=0;i<n;i++)
{
printf("%f:",*p);
p++;
}
p=a;
sum=sd=mean=var=0;
for(i=0;i<n;i++)
{
sum=sum+(*p);
p++;
}
mean=sum/n;
p=a;
for(i=0;i<n;i++)
{
var=var+pow((*p-mean),2);
p++;
}
var=var/n;
sd=sqrt(var);
printf("\n\nmean=%f\nsum=%f\n sd=%f\n var=%f\n",mean,sum,sd,var);
return 0;
}


//structure
#include <stdio.h>
struct student{
int id;
char name[30];
float marks[6];
float avg;
};
int main(){
struct student s[25];
int n,i,j;
printf("Enter number of students:");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("Enter student id:");
scanf("%d",&s[i].id);
printf("Enter student name:");
scanf("%s",s[i].name);
printf("Enter the marks of students:");
for(j=0;j<6;j++)
{
scanf("%f",&s[i].marks[j]);
}
}
for(i=0;i<n;i++)
{
float sum=0;
for(j=0;j<6;j++){
{
sum+=s[i].marks[j];
}
s[i].avg=sum/6.0;
}
printf("Student id \t Student Name \t Average \n");
for(i=0;i<n;i++)
{
if (s[i].avg>=40)
printf("%sd\t%10s\t%f\n",s[i].id,s[i].name,s[i].avg);
}
printf("Student id \t Student Name \t Average \n");
for(i=0;i<n;i++)
{
if (s[i].avg>=40)
printf("%sd\t%10s\t%f\n",s[i].id,s[i].name,s[i].avg);
}
return 0;
}
